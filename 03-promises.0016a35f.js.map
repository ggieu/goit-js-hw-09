{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SA0BA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC7B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAACH,WAAUC,UAEnBG,EAAO,CAACJ,WAAUC,S,GAEnBA,E,IAjCQQ,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAyBC,GACvBA,EAAIC,iBAKJ,IAJA,IAAgCC,EAAAF,EAAIG,cAAcC,SAA1CC,EAAwBH,EAAxBb,MAAOiB,EAAiBJ,EAAjBI,KAAMC,EAAWL,EAAXK,OACjBC,EAAeC,OAAOJ,EAAMK,OAC5BC,EAAcF,OAAOH,EAAKI,OAC1BE,EAAgBH,OAAOF,EAAOG,OACzBG,EAAI,EAAGA,GAAKD,EAAeC,GAAK,EACvC1B,EAAc0B,EAAGL,GAChBM,MAAK,SAAAC,G,IAAG3B,EAAQ2B,EAAR3B,SAAUC,EAAK0B,EAAL1B,MACjBJ,EAAA+B,OAAOC,QAAS,uBAAwCC,OAAf9B,EAAS,QAAY8B,OAAN7B,EAAM,M,IAE/D8B,OAAM,SAAAJ,G,IAAG3B,EAAQ2B,EAAR3B,SAAUC,EAAK0B,EAAL1B,MAClBJ,EAAA+B,OAAOI,QAAS,sBAAqCF,OAAf9B,EAAS,QAAY8B,OAAN7B,EAAM,M,IAE7DmB,GAAgBG,EAElBX,EAAIG,cAAckB,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', onCreatePromise);\n\nfunction onCreatePromise(evt) {\n  evt.preventDefault();\n  const { delay, step, amount } = evt.currentTarget.elements;\n  let currentDelay = Number(delay.value);\n  let currentStep = Number(step.value);\n  let currentAmount = Number(amount.value);\n  for (let i = 1; i <= currentAmount; i += 1) {\n    createPromise(i, currentDelay)\n    .then(({ position, delay }) => {\n      Notify.success((`✅ Fulfilled promise ${position} in ${delay}ms`));\n    })\n    .catch(({ position, delay }) => {\n      Notify.failure((`❌ Rejected promise ${position} in ${delay}ms`));\n    });\n    currentDelay += currentStep;\n  }\n  evt.currentTarget.reset();\n}\n\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n  const shouldResolve = Math.random() > 0.3;\n  setTimeout(() => {\n    if (shouldResolve) {\n      resolve({position, delay});\n    } else {\n      reject({position, delay});\n    }\n  }, delay);\n});\n}"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","evt","preventDefault","_elements","currentTarget","elements","delay1","step","amount","currentDelay","Number","value","currentStep","currentAmount","i","then","param","Notify","success","concat","catch","failure","reset"],"version":3,"file":"03-promises.0016a35f.js.map"}