{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SA0BA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC7B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAACH,E,MAAUC,IAEnBG,EAAO,C,SAACJ,E,MAAUC,GAAO,GAE1BA,EAAM,G,CAjCEQ,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAyBC,GACvBA,EAAIC,iBACJ,MAAQZ,MAAAa,EAAKC,KAAEA,EAAIC,OAAEA,GAAWJ,EAAIK,cAAcC,SAClD,IAAIC,EAAeC,OAAON,EAAMO,OAC5BC,EAAcF,OAAOL,EAAKM,OAC1BE,EAAgBH,OAAOJ,EAAOK,OAClC,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAeC,GAAK,EACvCzB,EAAcyB,EAAGL,GAChBM,MAAK,EAACzB,SAAEA,EAAQC,MAAEA,MACjBJ,EAAA6B,OAAOC,QAAS,uBAAqB3B,QAAiBC,MAAU,IAEjE2B,OAAM,EAAC5B,SAAEA,EAAQC,MAAEA,MAClBJ,EAAA6B,OAAOG,QAAS,sBAAoB7B,QAAeC,MAAU,IAE/DkB,GAAgBG,EAElBV,EAAIK,cAAca,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', onCreatePromise);\n\nfunction onCreatePromise(evt) {\n  evt.preventDefault();\n  const { delay, step, amount } = evt.currentTarget.elements;\n  let currentDelay = Number(delay.value);\n  let currentStep = Number(step.value);\n  let currentAmount = Number(amount.value);\n  for (let i = 1; i <= currentAmount; i += 1) {\n    createPromise(i, currentDelay)\n    .then(({ position, delay }) => {\n      Notify.success((`✅ Fulfilled promise ${position} in ${delay}ms`));\n    })\n    .catch(({ position, delay }) => {\n      Notify.failure((`❌ Rejected promise ${position} in ${delay}ms`));\n    });\n    currentDelay += currentStep;\n  }\n  evt.currentTarget.reset();\n}\n\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n  const shouldResolve = Math.random() > 0.3;\n  setTimeout(() => {\n    if (shouldResolve) {\n      resolve({position, delay});\n    } else {\n      reject({position, delay});\n    }\n  }, delay);\n});\n}"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","evt","preventDefault","delay1","step","amount","currentTarget","elements","currentDelay","Number","value","currentStep","currentAmount","i","then","Notify","success","catch","failure","reset"],"version":3,"file":"03-promises.4291daa4.js.map"}